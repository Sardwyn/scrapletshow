---
import Layout from '../../layouts/layout.astro';

export async function getStaticPaths() {
  const GUESTS = (await import('../../data/guests.json')).default;
  return (Array.isArray(GUESTS) ? GUESTS : []).map((g) => ({
    params: { slug: g.slug },
    props: { guest: g },
  }));
}

const { guest } = Astro.props;

const fmtDate = (iso) =>
  iso
    ? new Date(iso).toLocaleString(undefined, {
        year: 'numeric', month: 'short', day: 'numeric',
        hour: '2-digit', minute: '2-digit'
      })
    : '';

function youTubeEmbed(url) {
  try {
    const u = new URL(url);
    if (u.hostname.includes('youtu.be')) return `https://www.youtube.com/embed/${u.pathname.slice(1)}?rel=0`;
    const id = u.searchParams.get('v');
    return id ? `https://www.youtube.com/embed/${id}?rel=0` : null;
  } catch { return null; }
}

if (!guest) {
  Astro.response.status = 404;
}
---


<Layout title={guest ? `${guest.name} — Guest` : 'Guest Not Found'}>
  {guest ? (
    <section class="max-w-6xl mx-auto px-4 py-8 text-white">
      <!-- Hero -->
      <div class="relative overflow-hidden rounded-2xl border-2 border-pink shadow-xl mb-6">
        <img
          src={guest.banner || '/images/retro-tv-placeholder.png'}
          alt={`${guest.name} banner`}
          class="w-full h-56 object-cover"
          loading="lazy"
          onerror="this.src='/images/retro-tv-placeholder.png'"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent"></div>

        <div class="absolute left-4 bottom-4 flex items-center gap-4">
          <img
            src={guest.avatar || '/images/retro-tv-placeholder.png'}
            alt={`${guest.name} avatar`}
            class="w-20 h-20 rounded-full border-2 border-pink object-cover"
            onerror="this.src='/images/retro-tv-placeholder.png'"
          />
          <div>
            <h1 class="text-2xl sm:text-3xl font-black text-shadow-pink">{guest.name}</h1>
            <div class="text-white/80 text-sm">
              {guest.platform} • @{guest.handle}
            </div>
          </div>
          <div class="ml-auto mr-4 px-3 py-1 bg-black/70 border border-pink rounded text-xs">
            Appearing: {fmtDate(guest.appearing)}
          </div>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Left: Bio / Origin / Specialties -->
        <div class="lg:col-span-2 flex flex-col gap-6">
          <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
            <h2 class="font-bold mb-2 text-shadow-pink">About</h2>
            <p class="text-white/80">{guest.bio}</p>
            {guest.origin && (
              <p class="text-white/60 text-sm mt-3"><span class="font-bold text-white/80">Origin:</span> {guest.origin}</p>
            )}
            {Array.isArray(guest.specialties) && guest.specialties.length > 0 && (
              <div class="mt-3 text-sm text-white/80">
                <span class="font-bold text-white/90">Specialties:</span>
                <span class="ml-2">{guest.specialties.join(' • ')}</span>
              </div>
            )}
          </div>

          <!-- Picks -->
          {guest.picks && (
            <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
              <h2 class="font-bold mb-3 text-shadow-pink">Press Play with Scraplet</h2>
              <div class="grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm">
                <div class="p-3 border border-pink/40 rounded">
                  <div class="text-white/60 uppercase text-xs mb-1">Song</div>
                  <div class="font-bold">{guest.picks.song || '—'}</div>
                </div>
                <div class="p-3 border border-pink/40 rounded">
                  <div class="text-white/60 uppercase text-xs mb-1">Movie</div>
                  <div class="font-bold">{guest.picks.movie || '—'}</div>
                </div>
                <div class="p-3 border border-pink/40 rounded">
                  <div class="text-white/60 uppercase text-xs mb-1">Game</div>
                  <div class="font-bold">{guest.picks.game || '—'}</div>
                </div>
              </div>
            </div>
          )}

          <!-- Clips -->
          <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
            <h2 class="font-bold mb-3 text-shadow-pink">Clips & Highlights</h2>
            {Array.isArray(guest.clips) && guest.clips.length > 0 ? (
              <div class="grid gap-4 sm:grid-cols-2">
                {guest.clips.map((c) => {
                  const src = c.youtubeUrl ? youTubeEmbed(c.youtubeUrl) : null;
                  return (
                    <article class="border-2 border-pink rounded-xl overflow-hidden">
                      {src ? (
                        <div class="aspect-video">
                          <iframe
                            src={src}
                            class="w-full h-full"
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                            allowfullscreen
                            loading="lazy"
                            title={c.title}
                          />
                        </div>
                      ) : (
                        <div class="relative">
                          <img
                            src={c.poster || '/images/retro-tv-placeholder.png'}
                            alt={c.title}
                            class="w-full h-40 object-cover"
                            onerror="this.src='/images/retro-tv-placeholder.png'"
                          />
                          {c.duration && (
                            <div class="absolute bottom-2 right-2 text-xs bg-black/70 px-2 py-1 rounded">{c.duration}</div>
                          )}
                        </div>
                      )}
                      <div class="p-3 text-sm">
                        <div class="font-bold">{c.title}</div>
                        {c.youtubeUrl && <a href={c.youtubeUrl} class="underline hover:text-pink text-xs break-all">Open on YouTube</a>}
                      </div>
                    </article>
                  );
                })}
              </div>
            ) : (
              <div class="text-white/70">Highlights arriving after the show…</div>
            )}
          </div>
        </div>

        <!-- Right: Fun panel + Links -->
        <aside class="flex flex-col gap-6">
          <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
            <h3 class="font-bold mb-2 text-shadow-pink">Fun Stats</h3>
            <ul class="text-sm text-white/80 space-y-2">
              {guest.fun?.firstAppearance && (
                <li><span class="text-white/60">First appearance:</span> <span class="font-bold">{guest.fun.firstAppearance}</span></li>
              )}
              {guest.fun?.award && (
                <li><span class="text-white/60">Award:</span> <span class="font-bold">{guest.fun.award}</span></li>
              )}
              <!-- Zoltar gag: you can wire this to your /api/zoltar later -->
              <li><span class="text-white/60">Zoltar’s rating:</span> <span class="font-bold" id="zoltar-rating">—</span></li>
            </ul>
          </div>

          <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
            <h3 class="font-bold mb-2 text-shadow-pink">Links</h3>
            <div class="flex flex-wrap gap-2">
              {guest.links?.kick && <a href={guest.links.kick} class="px-3 py-1 border border-pink rounded hover:bg-pink hover:text-black">Kick</a>}
              {guest.links?.twitter && <a href={guest.links.twitter} class="px-3 py-1 border border-pink rounded hover:bg-pink hover:text-black">Twitter/X</a>}
              {guest.links?.discord && <a href={guest.links.discord} class="px-3 py-1 border border-pink rounded hover:bg-pink hover:text-black">Discord</a>}
              {guest.links?.merch && <a href={guest.links.merch} class="px-3 py-1 border border-pink rounded hover:bg-pink hover:text-black">Merch</a>}
            </div>
          </div>

          <div class="bg-black/30 border border-pink/60 rounded-xl p-4 shadow-xl">
            <h3 class="font-bold mb-2 text-shadow-pink">Share</h3>
            <button id="share-btn" class="px-3 py-2 bg-neonGreen text-black font-bold rounded w-full">Share This Guest</button>
          </div>
        </aside>
      </div>
    </section>
  ) : (
    <section class="max-w-4xl mx-auto px-4 py-16 text-white text-center">
      <h1 class="text-2xl font-black mb-2">Guest not found</h1>
      <p class="text-white/70">Try the <a class="underline hover:text-pink" href="/guests">Guests</a> page.</p>
    </section>
  )}
  
  {guest && (
    <script is:client>
    (() => {
      // silly “rating” placeholder (you can replace with a call to /api/zoltar later)
      try {
        const node = document.getElementById('zoltar-rating');
        if (node) {
          const seed = Array.from(`${location.pathname}`).reduce((a,c)=>a+c.charCodeAt(0),0);
          const pct = (seed % 71) + 20; // 20–90%
          node.textContent = pct + '% auspicious';
        }
      } catch {}

      // share button
      const btn = document.getElementById('share-btn');
      btn?.addEventListener('click', async () => {
        const shareData = {
          title: document.title,
          text: `Meet ${'${guest.name}'} on The Scraplet Show`,
          url: location.href
        };
        try {
          if (navigator.share) {
            await navigator.share(shareData);
          } else {
            const tw = new URL('https://twitter.com/intent/tweet');
            tw.searchParams.set('text', `${shareData.text} — ${shareData.url}`);
            window.open(tw.toString(), '_blank', 'noopener,noreferrer');
          }
        } catch {}
      });
    })();
    </script>
  )}
</Layout>
